<Page
    x:Class="UWP.Views.Top100"
    x:DefaultBindMode="OneWay"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:UWP.Converters"
    xmlns:services="using:UWP.Services"
    xmlns:userControls="using:UWP.UserControls"
    xmlns:viewModels="using:UWP.ViewModels" xmlns:models="using:UWP.Models"
    NavigationCacheMode="Required"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <Page.DataContext>
        <viewModels:Top100ViewModel x:Name="vm"/>
    </Page.DataContext>

    <Page.Resources>
        <converters:NumberForeground x:Key="NumberForeground"/>
        <converters:UpperCaseConverter x:Key="UpperCase"/>
        <converters:PercentageRounder x:Key="Percentage"/>
        <converters:FavIconConverter x:Key="FavIcon"/>
    </Page.Resources>
    
    <Grid Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- 
        ###########################################################################################
        # TOP HEADER # -->
        <Grid
            Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
            CornerRadius="8"
            Padding="30 10" Margin="10"
            MaxWidth="650">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <StackPanel HorizontalAlignment="Center" Margin="0 0 0 10">
                <TextBlock Text="GLOBAL MARKET DATA" Opacity="0.75" FontWeight="Light" CharacterSpacing="100"/>
            </StackPanel>

            <!-- TITLES -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="FontWeight" Value="Light"/>
                        <Setter Property="Margin" Value="0 -5 0 0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="Opacity" Value="0.5"/>
                    </Style>
                </Grid.Resources>

                <TextBlock Grid.Column="0" Text="BTC dom."/>
                <TextBlock Grid.Column="1" Text="24h Vol"/>
                <TextBlock Grid.Column="2" Text="Mkt Cap."/>
            </Grid>

            <!-- VALUES -->
            <Grid Grid.Row="2" Margin="0 -5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="22"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>

                <TextBlock Grid.Column="0">
                    <Run Text="{x:Bind vm.GlobalStats.BtcDominance}"
                         d:Text="50.00"/><Run Text="%"/>
                </TextBlock>
                <TextBlock Grid.Column="1" d:Text="340B€">
                    <Run	Text="{x:Bind vm.GlobalStats.TotalVolume}"/><!--
                    --><Run Text="{x:Bind vm.GlobalStats.CurrencySymbol}"/>
                </TextBlock>
                <TextBlock Grid.Column="2" d:Text="1700B€">
                    <Run Text="{x:Bind vm.GlobalStats.TotalMarketCap}"/><!--
                    --><Run Text="{x:Bind vm.GlobalStats.CurrencySymbol}"/>
                </TextBlock>
            </Grid>
        </Grid>

        <!--<userControls:TimeRangeRadioButtons
            Grid.Row="1"
            FullRange="False"
            Margin="0 10 0 20"/>-->

        <!-- 
        ###########################################################################################
        # Top 100 List View # -->
        <ListView
            x:Name="CurrenciesListView" Grid.Row="2"
            IsItemClickEnabled="True" ItemClick="ListView_Click"
            ItemsSource="{x:Bind vm.CoinMarket}"
            SelectionMode="None"  MaxWidth="1000">
            <ListView.Header>
                <UserControl x:Name="listView_Element">
                    <Grid x:Name="listView_Element2"
                        BorderThickness="0 0 0 0.2" BorderBrush="{ThemeResource SystemChromeAltLowColor}"
                        Margin="12 0 12 3" Padding="0 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" x:Name="cryptoCol"/>
                            <ColumnDefinition Width="*" x:Name="priceCol"/>
                            <ColumnDefinition Width="*" x:Name="capCol"/>
                            <ColumnDefinition Width="*" x:Name="volCol"/>
                            <ColumnDefinition Width="100" x:Name="diff24hCol"/>
                            <ColumnDefinition Width="100" x:Name="diff7dCol"/>
                            <ColumnDefinition Width="100" x:Name="diff30dCol"/>
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="step0">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="volCol.Width" Value="0"/>
                                        <Setter Target="diff24hCol.Width" Value="0"/>
                                        <Setter Target="diff7dCol.Width" Value="0"/>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step1">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="600"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff24hCol.Width" Value="0"/>
                                        <Setter Target="diff7dCol.Width" Value="0"/>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step2">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="700" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff7dCol.Width" Value="0"/>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step3">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="800" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step4">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="900" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff30dCol.Width" Value="100"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <TextBlock Grid.Column="0" HorizontalAlignment="Center" Text="Rank"/>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="Price"/>
                        <TextBlock Grid.Column="2" HorizontalAlignment="Center" Text="Mkt. Cap."/>
                        <TextBlock Grid.Column="3" HorizontalAlignment="Center" Text="Volume"/>
                        <TextBlock Grid.Column="4" HorizontalAlignment="Center" Text="24h"/>
                        <TextBlock Grid.Column="5" HorizontalAlignment="Center" Text="7d"/>
                        <TextBlock Grid.Column="6" HorizontalAlignment="Center" Text="30d"/>
                    </Grid>
                </UserControl>
            </ListView.Header>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemExpanded}">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="services:CoinMarket">
                    <UserControl>
                    <Grid Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
                            CornerRadius="5" Margin="0 3" Padding="0 2" x:Name="listView_Element2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" x:Name="cryptoCol"/>
                            <ColumnDefinition Width="*" x:Name="priceCol"/>
                            <ColumnDefinition Width="*" x:Name="capCol"/>
                            <ColumnDefinition Width="*" x:Name="volCol"/>
                            <ColumnDefinition Width="100" x:Name="diff24hCol"/>
                            <ColumnDefinition Width="100" x:Name="diff7dCol"/>
                            <ColumnDefinition Width="100" x:Name="diff30dCol"/>
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="step0">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="volCol.Width" Value="0"/>
                                        <Setter Target="diff24hCol.Width" Value="0"/>
                                        <Setter Target="diff7dCol.Width" Value="0"/>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step1">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="600"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff24hCol.Width" Value="0"/>
                                        <Setter Target="diff7dCol.Width" Value="0"/>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step2">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="700" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff7dCol.Width" Value="0"/>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step3">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="800" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff30dCol.Width" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="step4">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="900" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="diff30dCol.Width" Value="100"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- COLUMN 0 -->
                        <StackPanel Grid.Column="0"
                                Orientation="Horizontal" Padding="30 5 0 5">
                            <Button
                                d:Content="&#xEB51;"
                                Click="Fav_click"
                                Content="{x:Bind IsFav, Converter={StaticResource FavIcon}}"
                                FontFamily="{StaticResource FluentIconFont}"
                                Background="Transparent"/>
                            <Image
                                d:Source="ms-appx:///Assets/Icons/iconNULL.png"
                                Source="{x:Bind image}"
                                Width="45" Margin="10 0"/>
                            <StackPanel>
                                <TextBlock d:Text="Bitcoin" Text="{x:Bind name}" FontWeight="Bold" FontSize="16"/>
                                <StackPanel Orientation="Horizontal" Opacity="0.5">
                                    <StackPanel Background="#50808080" CornerRadius="4" Padding="4 0" Height="16">
                                        <TextBlock
                                            d:Text="1" Text="{x:Bind market_cap_rank}"
                                            FontSize="12" Padding="0 0 0 0"/>
                                    </StackPanel>
                                    <TextBlock d:Text="BTC" Text="{x:Bind symbol,
                                            Converter={StaticResource UpperCase}}" Margin="3 0"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>

                        <!-- COLUMN 1 -->
                        <TextBlock Grid.Column="1"
                                FontSize="18"
                                FontWeight="SemiBold" HorizontalAlignment="Center"
                                Text="{x:Bind current_price, Converter={StaticResource NumberRounder}}"
                                VerticalAlignment="Center"/>

                        <!-- COLUMN 2 -->
                        <TextBlock Grid.Column="2"
                                FontSize="18"
                                FontWeight="SemiBold" HorizontalAlignment="Center"
                                Text="{x:Bind market_cap, Converter={StaticResource NumberUnit}}"
                                VerticalAlignment="Center"/>

                        <!-- COLUMN 3 -->
                        <TextBlock Grid.Column="3"
                                FontSize="18"
                                FontWeight="SemiBold" HorizontalAlignment="Center"
                                Text="{x:Bind total_volume, Converter={StaticResource NumberUnit}}"
                                VerticalAlignment="Center"/>

                        <!-- COLUMN 4 -->
                        <userControls:DiffTextBlock
                                Grid.Column="4"
                                Diff="{x:Bind price_change_percentage_24h_in_currency}"/>

                        <!-- COLUMN 5 -->
                        <userControls:DiffTextBlock
                                Grid.Column="5"
                                Diff="{x:Bind price_change_percentage_7d_in_currency}"/>

                        <!-- COLUMN 6 -->
                        <userControls:DiffTextBlock
                                Grid.Column="6"
                                Diff="{x:Bind price_change_percentage_30d_in_currency}"/>

                    </Grid>
                    </UserControl>
                </DataTemplate>

            </ListView.ItemTemplate>

            <!--For previsualization purposes-->
            <d:Rectangle/>
        </ListView>
        
    </Grid>
</Page>
